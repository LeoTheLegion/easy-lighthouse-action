name: PageInsights CI

on:
  push:
    branches:
      - main
      - master
      - development
      - feature/**

    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE'
      - 'dist/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install
        
      - name: Build
        run: npm run build
        
      # Test the action using itself
      - name: Run PageInsights Action (Manual)
        uses: ./
        with:
          device: 'DESKTOP'
          page_insights_key: ${{ secrets.PAGE_INSIGHTS_KEY }}
          performance_threshold: '75'
          seo_threshold: '75'
          accessibility_threshold: '75'
          best_practices_threshold: '75'
          mode: 'MANUAL'
          urls: |
            https://leothelegion.net
            https://leothelegion.net/blog
          show_table_in_summary: true

      # Test the action using itself
      - name: Run PageInsights Action (Manual - PS)
        uses: ./
        with:
          device: 'DESKTOP'
          page_insights_key: ${{ secrets.PAGE_INSIGHTS_KEY }}
          performance_threshold: '75'
          seo_threshold: '75'
          mode: 'MANUAL'
          urls: |
            https://leothelegion.net
            https://leothelegion.net/blog
          show_table_in_summary: true
      
      # Test the action using itself
      - name: Run PageInsights Action (Manual - AB)
        uses: ./
        with:
          device: 'DESKTOP'
          page_insights_key: ${{ secrets.PAGE_INSIGHTS_KEY }}
          accessibility_threshold: '75'
          best_practices_threshold: '75'
          mode: 'MANUAL'
          urls: |
            https://leothelegion.net
            https://leothelegion.net/blog
          show_table_in_summary: true

      # Test the action using itself
      - name: Run PageInsights Action (Sitemap)
        uses: ./
        with:
          device: 'DESKTOP'
          page_insights_key: ${{ secrets.PAGE_INSIGHTS_KEY }}
          performance_threshold: '75'
          seo_threshold: '75'
          accessibility_threshold: '75'
          best_practices_threshold: '75'
          mode: 'SITEMAP'
          sitemap_url: 'https://leothelegion.net/sitemap-index.xml'

  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Generate Hash on dist 
        id: hash
        run: |
          echo "Hashing dist files"
          HASH=$(find dist -type f -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Build
        run: npm run build

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Get version from package.json
        id: get_version
        run: echo "::set-output name=version::$(node -p -e "require('./package.json').version")"

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Commit dist
        id: commit_status
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin git@github.com:${{ github.repository }}.git
          git add dist -f
          if git diff --staged --quiet; then
            echo "hasChanges=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            git commit -m "chore: update dist for version ${{ github.ref_name }}"
            git push origin HEAD:main
            echo "hasChanges=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: ${{ steps.commit_status.outputs.hasChanges == 'true' }}
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}